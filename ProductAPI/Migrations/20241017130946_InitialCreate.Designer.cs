// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductAPI.Model.Context;

#nullable disable

namespace ProductAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241017130946_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductAPI.Model.CaixaDisponivel", b =>
                {
                    b.Property<string>("CaixaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DimensoesId")
                        .HasColumnType("int");

                    b.HasKey("CaixaId");

                    b.HasIndex("DimensoesId");

                    b.ToTable("CaixasDisponiveis");

                    b.HasData(
                        new
                        {
                            CaixaId = "Caixa 1",
                            DimensoesId = 1
                        },
                        new
                        {
                            CaixaId = "Caixa 2",
                            DimensoesId = 2
                        },
                        new
                        {
                            CaixaId = "Caixa 3",
                            DimensoesId = 3
                        });
                });

            modelBuilder.Entity("ProductAPI.Model.Dimensoes", b =>
                {
                    b.Property<int>("DimensoesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DimensoesId"));

                    b.Property<int>("Altura")
                        .HasColumnType("int");

                    b.Property<int>("Comprimento")
                        .HasColumnType("int");

                    b.Property<int>("Largura")
                        .HasColumnType("int");

                    b.HasKey("DimensoesId");

                    b.ToTable("Dimensoes");

                    b.HasData(
                        new
                        {
                            DimensoesId = 1,
                            Altura = 30,
                            Comprimento = 80,
                            Largura = 40
                        },
                        new
                        {
                            DimensoesId = 2,
                            Altura = 80,
                            Comprimento = 40,
                            Largura = 50
                        },
                        new
                        {
                            DimensoesId = 3,
                            Altura = 50,
                            Comprimento = 60,
                            Largura = 80
                        });
                });

            modelBuilder.Entity("ProductAPI.Model.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoId"));

                    b.HasKey("PedidoId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("ProductAPI.Model.Produto", b =>
                {
                    b.Property<string>("ProdutoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DimensoesId")
                        .HasColumnType("int");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.HasKey("ProdutoId");

                    b.HasIndex("DimensoesId");

                    b.HasIndex("PedidoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("ProductAPI.Model.CaixaDisponivel", b =>
                {
                    b.HasOne("ProductAPI.Model.Dimensoes", "Dimensoes")
                        .WithMany()
                        .HasForeignKey("DimensoesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dimensoes");
                });

            modelBuilder.Entity("ProductAPI.Model.Produto", b =>
                {
                    b.HasOne("ProductAPI.Model.Dimensoes", "Dimensoes")
                        .WithMany()
                        .HasForeignKey("DimensoesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductAPI.Model.Pedido", null)
                        .WithMany("Produtos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dimensoes");
                });

            modelBuilder.Entity("ProductAPI.Model.Pedido", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
